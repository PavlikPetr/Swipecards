def getGitHeadSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim();
}

def getTimestamp() {
    return new Date().getTime();
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath rootProject.ANDROID_BUILD_GRADLE_PLUGIN_VERSION
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)
    buildToolsVersion rootProject.ANDROID_BUILD_TOOLS_VERSION

    productFlavors {
        //Основной flavor, в нашем случае работает с Google Play
        google {
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroid\"";
        }
        //flavor для версии приложения для Amazon
        amazon {
            buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE", "com.topface.billing.BillingType.AMAZON";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappamazon\"";
        }
        //flavor для версии приложения для Nokia X
        nokia {
            buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE",
                    "com.topface.billing.BillingType.NOKIA_STORE";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroidnokia\"";
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId 'com.topface.topface'
        //noinspection GroovyAssignabilityCheck
        minSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MIN_SDK_VERSION)
        //noinspection GroovyAssignabilityCheck
        targetSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)

        versionCode Integer.parseInt(rootProject.VERSION_CODE)
        versionName rootProject.VERSION_NAME

        testApplicationId "com.topface.topface.test"

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"


        buildConfigField "long", "BUILD_TIME", "0L";
        buildConfigField "String", "GIT_HEAD_SHA", "null";
        buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE",
                "com.topface.billing.BillingType.GOOGLE_PLAY";
    }

    signingConfigs {
        debug {
            storeFile file("misc/keys/debug.keystore")
        }

        release {
            storeFile file("misc/keys/topface.keystore")
            storePassword "Sonetica2012"
            keyAlias "topface"
            keyPassword "Sonetica2012"
        }
    }

    buildTypes {
        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
        //Специальный тип сборки для тестирования отделом QA,
        //пишем время сборки и SHA текущего комита, это нужно для идентификации сборки
        //noinspection GroovyAssignabilityCheck
        qa.initWith(buildTypes.debug)
        qa {
            buildConfigField "long", "BUILD_TIME", "${getTimestamp()}L";
            buildConfigField "String", "GIT_HEAD_SHA", "\"${getGitHeadSha()}\"";
        }
    }

    //@see https://code.google.com/p/android/issues/detail?id=61573#c14
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }

    //@see https://code.google.com/p/android/issues/detail?id=40409
    dexOptions {
        jumboMode = true
    }
}

dependencies {
    //Android Support libs
    compile rootProject.ANDROID_BUILD_SUPPORT_LIBRARY_VERSION
    compile rootProject.ANDROID_BUILD_SUPPORT_APPCOMPAT_VERSION
    //Google play services
    compile rootProject.GOOGLE_PLAY_SERVICES_VERSION
    //All jar libs
    compile fileTree(dir: 'libs', exclude: 'amazon/*.jar', include: '*.jar')
    //Topface sub libs
    compile project(':libs:IllustratedTextView')
    compile project(':libs:statistics-android')
    //Third party libs
    compile('ch.acra:acra:4.5.0') {
        //Удаляем предоставляемыю acra зависимость org.json, так как она все рвно не нужна
        //и на нее ругается gradle
        exclude group: 'org.json'
    }
    compile 'com.google.code.gson:gson:2.3'
    compile 'org.onepf:openiab:0.9.7.2-fortumo'
    compile project(':libs:Android-ViewPagerIndicator')
    compile project(':libs:PullToRefresh')
    compile project(':libs:PhotoView')
    compile project(':libs:UniversalImageLoader')
    //Social networks SDK
    compile project(':libs:odnoklassniki')
    //Аннотации вроде @NonNull и @*Res для обозначения переменных
    compile 'com.android.support:support-annotations:19.1.0'
    //Для Амазона нужна библиотека для поддержки in-app покупок
    amazonCompile fileTree(dir: 'libs/amazon/', include: '*.jar')

    compile project(':libs:tf-offerwall:sdk')

    androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r3'

    compile 'com.vk:androidsdk:1.3.4'
    compile 'com.facebook.android:facebook-android-sdk:3.20.0'
}

project(':libs:IllustratedTextView') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

project(':libs:Android-ViewPagerIndicator') {
    apply plugin: 'com.android.library'
    //noinspection GradleMisplacedStatement
    dependencies {
        compile rootProject.ANDROID_BUILD_SUPPORT_LIBRARY_VERSION
        compile project(':libs:IllustratedTextView')
    }
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:PullToRefresh') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:PhotoView') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:UniversalImageLoader') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

//Social networks
project(':libs:odnoklassniki') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

//Стандартные настройки подпроектов
subprojects {
    //До лучших времен закоментировал эту строку, пока Idea отказывается делать такие штуки, как папка сборки вне пределов проекта
    //buildDir "../../build/projects/$project.name"
    android {
        compileSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)
        buildToolsVersion rootProject.ANDROID_BUILD_TOOLS_VERSION
    }
}

android {
    lintOptions {
        checkReleaseBuilds true
        //Отключено, что бы не валилась сборка на CI сервере
        abortOnError false

        //Отключаем ненужные нам проверки lint
        ignore "MissingTranslation", //Об отсутсвующих переводах. У нас есть всегда языки без переводов
                "ContentDescription", //О том что к каждой картинке нужно описание
                "SmallSp", //Проверка на маленький размер шрифта. Это вотчина дизайнеров
                "HandlerLeak", //Предупреждение об использовании анонимного Handler
                "InflateParams", //Проверка того, что  передан view root при inflate. Отключен, т.к. все предупреждения касаются inflate в ListView, где нет root view
                "UnusedQuantity", //Предупреждение о не используемой форме в переводах. Мы используем zero во всех языках, поэтому нам не актуально
                "ClickableViewAccessibility", //Предупреждение о том, что нужно определить performClick, если переопределяешь onTouchEvent
                "MissingQuantity"
        //Временно отключена проверка из-за того, что нет many формы в польском и украинском в дальнейшем поправим (пока many = other)
    }
}