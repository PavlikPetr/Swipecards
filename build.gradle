//Константы для сборки приложения. В подмодулях следует использовать именно их, а не хардкодить значения
def defaultCompileSdkVersion = 19
def defaultBuildToolsVersion = "19.1"

def supportLibrary = "com.android.support:support-v4:19.0.+"

def getGitHeadSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim();
}

def getTimestamp() {
    return new Date().getTime();
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.1'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'android'

android {
    compileSdkVersion defaultCompileSdkVersion
    buildToolsVersion defaultBuildToolsVersion

    productFlavors {
        //Основной flavor, в нашем случае работает с Google Play
        google {
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroid\"";
        }
        //flavor для версии приложения для Amazon
        amazon {
            buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE", "com.topface.billing.BillingType.AMAZON";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappamazon\"";
        }
        //flavor для версии приложения для Nokia X
        nokia {
            buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE",
                    "com.topface.billing.BillingType.NOKIA_STORE";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroidnokia\"";
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        //noinspection GroovyAssignabilityCheck
        minSdkVersion 7
        //noinspection GroovyAssignabilityCheck
        targetSdkVersion 19

        //noinspection GroovyAssignabilityCheck
        testApplicationId "com.topface.topface.test"
        //noinspection GroovyAssignabilityCheck
        testInstrumentationRunner "android.test.InstrumentationTestRunner"

        buildConfigField "long", "BUILD_TIME", "0L";
        buildConfigField "String", "GIT_HEAD_SHA", "null";
        buildConfigField "com.topface.billing.BillingType", "BILLING_TYPE",
                "com.topface.billing.BillingType.GOOGLE_PLAY";
    }

    signingConfigs {
        debug {
            storeFile file("misc/keys/debug.keystore")
        }

        release {
            storeFile file("misc/keys/topface.keystore")
            storePassword "Sonetica2012"
            keyAlias "topface"
            keyPassword "Sonetica2012"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        //Специальный тип сборки для тестирования отделом QA,
        //пишем время сборки и SHA текущего комита, это нужно для идентификации сборки
        qa.initWith(buildTypes.debug)
        qa {
            buildConfigField "long", "BUILD_TIME", "${getTimestamp()}L";
            buildConfigField "String", "GIT_HEAD_SHA", "\"${getGitHeadSha()}\"";
        }
    }

    //@see https://code.google.com/p/android/issues/detail?id=61573#c14
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
    }

}

dependencies {
    //Android Support libs
    compile supportLibrary
    compile 'com.android.support:appcompat-v7:19.0.+'

    //All jar libs
    compile fileTree(dir: 'libs', include: '*.jar', exclude: 'GoogleAdMobAdsSdk.jar')

    //Для Амазона нужна библиотека для поддержки in-app покупок
    compile files('libs/amazon/amazon-in-app-purchasing.jar')

    //Topface sub libs
    compile project(':libs:IllustratedTextView')
    compile project(':libs:AndroidStatistics')

    //Third party libs
    compile 'ch.acra:acra:4.5.0'
    compile project(':libs:Android-ViewPagerIndicator')
    compile project(':libs:PullToRefresh')
    compile project(':libs:PhotoView')
    compile project(':libs:UniversalImageLoader')

    //Social networks SDK
    compile project(':libs:Facebook')
    compile project(':libs:odnoklassniki')

    //Ad networks SDK
    compile project(':libs:mopub-android-sdk')
    compile project(':libs:AdLabSDK')

    androidTestCompile 'com.jayway.android.robotium:robotium-solo:4.+'
}

project(':libs:AndroidStatistics') {
    apply plugin: 'android-library'
    repositories {
        mavenCentral()
    }
}

project(':libs:IllustratedTextView') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

project(':libs:Android-ViewPagerIndicator') {
    apply plugin: 'android-library'
    dependencies {
        compile supportLibrary
        compile project(':libs:IllustratedTextView')
    }
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:PullToRefresh') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:PhotoView') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:UniversalImageLoader') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

//Social networks 
project(':libs:Facebook') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'facebook/AndroidManifest.xml'
        java.srcDirs = ['facebook/src']
        res.srcDirs = ['facebook/res']
    }
}

project(':libs:odnoklassniki') {
    apply plugin: 'android-library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

//Ad networks
project(':libs:mopub-android-sdk') {
    apply plugin: 'android-library'
    dependencies {
        compile supportLibrary
        compile files('../GoogleAdMobAdsSdk.jar')
    }
    android.sourceSets.main {
        manifest.srcFile 'mopub-sdk/AndroidManifest.xml'
        java.srcDirs = ['mopub-sdk/src/main/java']
    }
}


project(':libs:AdLabSDK') {
    apply plugin: 'android-library'
    dependencies {
        compile files('libs/apache-mime4j-0.6.jar')
        compile files('libs/commons-io-1.4.jar')
        compile files('libs/httpmime-4.0.jar')
    }
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

//Стандартные настройки подпроектов
subprojects {
    //До лучших времен закоментировал эту строку, пока Idea отказывается делать такие штуки, как папка сборки вне пределов проекта
    //buildDir "../../build/projects/$project.name"
    android {
        compileSdkVersion defaultCompileSdkVersion
        buildToolsVersion defaultBuildToolsVersion
    }
}

android {
    lintOptions {
        checkReleaseBuilds true
        abortOnError true
        ignore "MissingTranslation", "ValidFragment"
        /*ValidFragment пока игнорируем, но нужно будет исправить*/
    }
    aaptOptions.useAaptPngCruncher = true
}