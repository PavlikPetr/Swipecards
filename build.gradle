def versionProps = new Properties()
def versionPropsFile = file('version.properties')
if (!versionPropsFile.canRead()) {
    throw new GradleException("Could not read version.properties! Create file in project root")
}
versionProps.load(new FileInputStream(versionPropsFile))
incrementQaBuildVersion(versionProps, versionPropsFile);

def getVersionCode(versionProps) {
    def versionCode = versionProps['VERSION_CODE'].toInteger()
    if (project.gradle.startParameter.taskNames.contains("assembleGoogleQa")) {
        versionCode = versionCode + getQaVersion(versionProps)
    }
    return versionCode;
}

def getVersionName(versionProps) {
    def versionName = versionProps['VERSION_NAME']
    return versionName;
}

def getQaVersion(versionProps) {
    def versionQaBuild = versionProps['VERSION_QA_BUILD'].toInteger()
    return versionQaBuild;
}

def incrementQaBuildVersion(versionProps, versionPropsFile) {
    if (project.gradle.startParameter.taskNames.contains("assembleGoogleQa") && versionProps != null) {
        def versionQaBuild = versionProps['VERSION_QA_BUILD'].toInteger() + 1
        versionProps['VERSION_QA_BUILD'] = versionQaBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    }
}

def getGitHeadSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim();
}

def getTimestamp() {
    return new Date().getTime();
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath rootProject.ANDROID_BUILD_GRADLE_PLUGIN_VERSION
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

allprojects {
    repositories {
        maven { url 'https://raw.githubusercontent.com/onepf/OPF-mvn-repo/master/' }
        maven { url 'https://bitbucket.org/atm13/artifacts/raw/master/' }
        jcenter()
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

android {
    compileSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)
    buildToolsVersion rootProject.ANDROID_BUILD_TOOLS_VERSION

    productFlavors {
        //Основной flavor, в нашем случае работает с Google Play
        google {
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroid\"";
        }
        //flavor для версии приложения для Amazon
        amazon {
            buildConfigField "com.topface.billing.MarketApiType", "MarketApiType", "com.topface.billing.MarketApiType.AMAZON";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappamazon\"";
        }
        //flavor для версии приложения для Nokia X
        //Пока не используется, поэтому закоментирован
        /*nokia {
            buildConfigField "com.topface.billing.MarketApiType", "MARKET_API_TYPE",
                    "com.topface.billing.MarketApiType.NOKIA_STORE";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappandroidnokia\"";
        }*/
        ifree {
            multiDexEnabled true
            applicationId "com.topface.topface.ifree";
            buildConfigField "com.topface.billing.MarketApiType", "MarketApiType", "com.topface.billing.MarketApiType.I_FREE";
            buildConfigField "String", "STATISTICS_APP", "\"topfacemobappifree\"";
            buildConfigField "com.topface.billing.MarketApiType", "MARKET_API_TYPE",
                    "com.topface.billing.MarketApiType.I_FREE";
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        applicationId 'com.topface.topface'
        //noinspection GroovyAssignabilityCheck
        minSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MIN_SDK_VERSION)
        //noinspection GroovyAssignabilityCheck
        targetSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)

        versionCode getVersionCode(versionProps)
        versionName getVersionName(versionProps)

        testApplicationId "com.topface.topface.test"

        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"

        buildConfigField "long", "BUILD_TIME", "0L";
        buildConfigField "String", "GIT_HEAD_SHA", "null";
        buildConfigField "com.topface.billing.MarketApiType", "MARKET_API_TYPE",
                "com.topface.billing.MarketApiType.GOOGLE_PLAY";
    }

    signingConfigs {
        debug {
            storeFile file("misc/keys/debug.keystore")
        }

        release {
            storeFile file("misc/keys/topface.keystore")
            storePassword "Sonetica2012"
            keyAlias "topface"
            keyPassword "Sonetica2012"
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-config.txt'
        }
        release {
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-config.txt'
            shrinkResources false
        }
        //Специальный тип сборки для тестирования отделом QA,
        //пишем время сборки и SHA текущего комита, это нужно для идентификации сборки
        qa.initWith(buildTypes.debug)
        qa {
            versionNameSuffix ".${getQaVersion(versionProps)}-qa"
            buildConfigField "long", "BUILD_TIME", "${getTimestamp()}L";
            buildConfigField "String", "GIT_HEAD_SHA", "\"${getGitHeadSha()}\"";
        }
    }

    //@see https://code.google.com/p/android/issues/detail?id=61573#c14
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }

    dexOptions {
        //@see https://code.google.com/p/android/issues/detail?id=40409
        jumboMode true
        //@see https://code.google.com/p/android/issues/detail?id=176638
        incremental true
        javaMaxHeapSize "4g"
    }

    lintOptions {
        checkReleaseBuilds true
        //Отключено, что бы не валилась сборка на CI сервере
        abortOnError false

        //Отключаем ненужные нам проверки lint
        ignore "MissingTranslation", //Об отсутсвующих переводах. У нас есть всегда языки без переводов
                "ContentDescription", //О том что к каждой картинке нужно описание
                "SmallSp", //Проверка на маленький размер шрифта. Это вотчина дизайнеров
                "HandlerLeak", //Предупреждение об использовании анонимного Handler
                "InflateParams", //Проверка того, что  передан view root при inflate. Отключен, т.к. все предупреждения касаются inflate в ListView, где нет root view
                "UnusedQuantity", //Предупреждение о не используемой форме в переводах. Мы используем zero во всех языках, поэтому нам не актуально
                "ClickableViewAccessibility", //Предупреждение о том, что нужно определить performClick, если переопределяешь onTouchEvent
                "MissingQuantity" //Временно отключена проверка из-за того,
        //что нет many формы в польском и украинском в дальнейшем поправим
        //(пока many = other)
    }
    sourceSets {
        ifree {
            manifest.srcFile 'AndroidManifest1.xml'
        }
    }
}

dependencies {
    //Android Support libs
    compile rootProject.ANDROID_BUILD_SUPPORT_LIBRARY_VERSION
    compile rootProject.ANDROID_BUILD_SUPPORT_APPCOMPAT_VERSION
    //Google play services
    compile "com.google.android.gms:play-services-base:7.3.0"
    compile "com.google.android.gms:play-services-gcm:7.3.0"
    compile "com.google.android.gms:play-services-ads:7.3.0"
    //All jar libs
    googleCompile name: 'ads_adman_2.2.7'
    amazonCompile name: 'ads_adman_2.2.7'
    compile name: 'appsflyer'
    compile name: 'comscore'
    compile name: 'flurry_analytics_5.5.0'
    compile name: 'offerwalls_sponsorpay'

    //Library for WebSocket and other network requests
    compile 'com.koushikdutta.async:androidasync:2.1.5'
    //Topface sub libs
    compile project(':libs:IllustratedTextView')
    compile project(':libs:statistics-android')
    //Third party libs
    compile('ch.acra:acra:4.6.0RC2') {
        //Удаляем предоставляемыю acra зависимость org.json, так как она все рвно не нужна
        //и на нее ругается gradle
        exclude group: 'org.json'
    }
    compile 'com.google.code.gson:gson:2.3'

    //OpenIAB
    compile 'org.onepf:openiab:0.9.8.4'

    compile project(':libs:PullToRefresh')
    compile project(':libs:PhotoView')
    compile project(':libs:UniversalImageLoader')
    //Social networks SDK
    compile project(':libs:odnoklassniki')
    //Аннотации вроде @NonNull и @*Res для обозначения переменных
    compile 'com.android.support:support-annotations:21.0.2'
    //Для Амазона нужна библиотека для поддержки in-app покупок
    amazonCompile 'com.amazon:in-app-purchasing:2.0.1'

    compile project(':libs:tf-offerwall:sdk')

    androidTestCompile 'com.jakewharton.espresso:espresso:1.1-r3'

    compile 'com.vk:androidsdk:1.3.6'
    compile 'com.facebook.android:facebook-android-sdk:3.22.0'
    //NineOldAndroids
    compile 'com.nineoldandroids:library:2.4.0'
    //ListViewAnimations
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'

    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'
    qaCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // I-FREE dependency
    ifreeCompile('com.ifree.monetize:monetization-library:2.2.3') {
        exclude group: "com.fasterxml.jackson.core"
        exclude module: "support-v4"
    }
    ifreeCompile(
            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.3.3'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.3.3'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.3.3']
    )
    ifreeCompile 'com.android.support:multidex:1.0.1'
    ifreeCompile fileTree(dir: 'ifree/libs', include: '*.jar')
    // />
}

project(':libs:IllustratedTextView') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

project(':libs:PullToRefresh') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:PhotoView') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

project(':libs:UniversalImageLoader') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'library/AndroidManifest.xml'
        java.srcDirs = ['library/src']
        res.srcDirs = ['library/res']
    }
}

//Social networks
project(':libs:odnoklassniki') {
    apply plugin: 'com.android.library'
    android.sourceSets.main {
        manifest.srcFile 'AndroidManifest.xml'
        java.srcDirs = ['src']
        res.srcDirs = ['res']
    }
}

//Стандартные настройки подпроектов
subprojects {
    //До лучших времен закоментировал эту строку, пока Idea отказывается делать такие штуки, как папка сборки вне пределов проекта
    //buildDir "../../build/projects/$project.name"
    android {
        compileSdkVersion Integer.parseInt(rootProject.ANDROID_BUILD_MAX_SDK_VERSION)
        buildToolsVersion rootProject.ANDROID_BUILD_TOOLS_VERSION
    }
}
